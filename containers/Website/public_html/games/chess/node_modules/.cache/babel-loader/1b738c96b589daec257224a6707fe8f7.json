{"ast":null,"code":"import _classCallCheck from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import Piece from'./piece.js';var Pawn=/*#__PURE__*/function(_Piece){_inherits(Pawn,_Piece);var _super=_createSuper(Pawn);function Pawn(player){var _this;_classCallCheck(this,Pawn);_this=_super.call(this,player,player===1?require(\"../images/white_pawn.svg\"):require(\"../images/black_pawn.svg\"));_this.initialPositions={1:[48,49,50,51,52,53,54,55],2:[8,9,10,11,12,13,14,15]};return _this;}_createClass(Pawn,[{key:\"isMovePossible\",value:function isMovePossible(src,dest,isDestEnemyOccupied){if(this.player===1){if(dest===src-8&&!isDestEnemyOccupied||dest===src-16&&this.initialPositions[1].indexOf(src)!==-1){return true;}else if(isDestEnemyOccupied&&(dest===src-9||dest===src-7)){return true;}}else if(this.player===2){if(dest===src+8&&!isDestEnemyOccupied||dest===src+16&&this.initialPositions[2].indexOf(src)!==-1){return true;}else if(isDestEnemyOccupied&&(dest===src+9||dest===src+7)){return true;}}return false;}/**\n   * returns array of one if pawn moves two steps, else returns empty array  \n   * @param  {[type]} src  [description]\n   * @param  {[type]} dest [description]\n   * @return {[type]}      [description]\n   */},{key:\"getSrcToDestPath\",value:function getSrcToDestPath(src,dest){if(dest===src-16){return[src-8];}else if(dest===src+16){return[src+8];}return[];}}]);return Pawn;}(Piece);export{Pawn as default};","map":{"version":3,"sources":["/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/chess/src/pieces/pawn.js"],"names":["Piece","Pawn","player","require","initialPositions","src","dest","isDestEnemyOccupied","indexOf"],"mappings":"owBAAA,MAAOA,CAAAA,KAAP,KAAkB,YAAlB,C,GAEqBC,CAAAA,I,oFACnB,cAAYC,MAAZ,CAAmB,sCACjB,uBAAMA,MAAN,CAAeA,MAAM,GAAK,CAAX,CAAeC,OAAO,CAAC,0BAAD,CAAtB,CAAqDA,OAAO,CAAC,0BAAD,CAA3E,EACA,MAAKC,gBAAL,CAAwB,CACtB,EAAG,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CAAqB,EAArB,CAAyB,EAAzB,CAA6B,EAA7B,CADmB,CAEtB,EAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,EAAf,CAAmB,EAAnB,CAAuB,EAAvB,CAA2B,EAA3B,CAFmB,CAAxB,CAFiB,aAMlB,C,uEAEcC,G,CAAKC,I,CAAMC,mB,CAAoB,CAE5C,GAAG,KAAKL,MAAL,GAAgB,CAAnB,CAAqB,CACnB,GAAII,IAAI,GAAKD,GAAG,CAAG,CAAf,EAAoB,CAACE,mBAAtB,EAA+CD,IAAI,GAAKD,GAAG,CAAG,EAAf,EAAqB,KAAKD,gBAAL,CAAsB,CAAtB,EAAyBI,OAAzB,CAAiCH,GAAjC,IAA0C,CAAC,CAAlH,CAAqH,CACnH,MAAO,KAAP,CACD,CAFD,IAGK,IAAGE,mBAAmB,GAAKD,IAAI,GAAKD,GAAG,CAAG,CAAf,EAAoBC,IAAI,GAAKD,GAAG,CAAG,CAAxC,CAAtB,CAAiE,CACpE,MAAO,KAAP,CACD,CACF,CAPD,IAQK,IAAG,KAAKH,MAAL,GAAgB,CAAnB,CAAqB,CACxB,GAAII,IAAI,GAAKD,GAAG,CAAG,CAAf,EAAoB,CAACE,mBAAtB,EAA+CD,IAAI,GAAKD,GAAG,CAAG,EAAf,EAAqB,KAAKD,gBAAL,CAAsB,CAAtB,EAAyBI,OAAzB,CAAiCH,GAAjC,IAA0C,CAAC,CAAlH,CAAqH,CACnH,MAAO,KAAP,CACD,CAFD,IAGK,IAAGE,mBAAmB,GAAKD,IAAI,GAAKD,GAAG,CAAG,CAAf,EAAoBC,IAAI,GAAKD,GAAG,CAAG,CAAxC,CAAtB,CAAiE,CACpE,MAAO,KAAP,CACD,CACF,CACD,MAAO,MAAP,CACD,CAED;;;;;+DAMiBA,G,CAAKC,I,CAAK,CACzB,GAAGA,IAAI,GAAKD,GAAG,CAAG,EAAlB,CAAqB,CACnB,MAAO,CAACA,GAAG,CAAG,CAAP,CAAP,CACD,CAFD,IAGK,IAAGC,IAAI,GAAKD,GAAG,CAAG,EAAlB,CAAqB,CACxB,MAAO,CAACA,GAAG,CAAG,CAAP,CAAP,CACD,CACD,MAAO,EAAP,CACD,C,kBA5C+BL,K,SAAbC,I","sourcesContent":["import Piece from './piece.js';\n\nexport default class Pawn extends Piece {\n  constructor(player){\n    super(player, (player === 1?  require(\"../images/white_pawn.svg\") : require(\"../images/black_pawn.svg\")));\n    this.initialPositions = {\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\n    }\n  }\n\n  isMovePossible(src, dest, isDestEnemyOccupied){\n\n    if(this.player === 1){\n      if((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && this.initialPositions[1].indexOf(src) !== -1)){\n        return true;\n      }\n      else if(isDestEnemyOccupied && (dest === src - 9 || dest === src - 7)){\n        return true;\n      }\n    }\n    else if(this.player === 2){\n      if((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && this.initialPositions[2].indexOf(src) !== -1)){\n        return true;\n      }\n      else if(isDestEnemyOccupied && (dest === src + 9 || dest === src + 7)){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * returns array of one if pawn moves two steps, else returns empty array  \n   * @param  {[type]} src  [description]\n   * @param  {[type]} dest [description]\n   * @return {[type]}      [description]\n   */\n  getSrcToDestPath(src, dest){\n    if(dest === src - 16){\n      return [src - 8];\n    }\n    else if(dest === src + 16){\n      return [src + 8];\n    }\n    return [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}