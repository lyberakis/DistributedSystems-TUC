{"ast":null,"code":"import _objectSpread from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'../index.css';import Board from'./board.js';import FallenSoldierBlock from'./fallen-soldier-block.js';import initialiseChessBoard from'../helpers/board-initialiser.js';import Bishop from'../pieces/bishop.js';import Knight from'../pieces/knight.js';import Queen from'../pieces/queen.js';import Rook from'../pieces/rook.js';import*as conn from'./multiplayer.js';var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);var _super=_createSuper(Game);function Game(props){var _this;_classCallCheck(this,Game);_this=_super.call(this,props);var args=conn.getArgumenets();var data=conn.connect(args['host']+':'+args['playmanster'],args['token']);_this.state={squares:initialiseChessBoard(),whiteFallenSoldiers:[],blackFallenSoldiers:[],player:1,sourceSelection:-1,kingStatus:'',turn:'white',type:null,myTurn:false,changePawn:-1,host:args['host'],gamemaster:args['gamemaster'],token:args['token'],socket:data['socket'],status:'',connectionStatus:data['connectionStatus'],progress:0,roundID:null};_this.setBishop=_this.setBishop.bind(_assertThisInitialized(_this));_this.setQueen=_this.setQueen.bind(_assertThisInitialized(_this));_this.setKnight=_this.setKnight.bind(_assertThisInitialized(_this));_this.setRook=_this.setRook.bind(_assertThisInitialized(_this));conn.setListeners(_assertThisInitialized(_this));return _this;}_createClass(Game,[{key:\"handleClick\",value:function handleClick(i){if(this.state.myTurn){var squares=this.state.squares.slice();if(this.state.sourceSelection===-1){if(!squares[i]||squares[i].player!==this.state.player){this.setState({status:\"Wrong selection. Choose player \"+this.state.player+\" pieces.\"});if(squares[i]){squares[i].style=_objectSpread(_objectSpread({},squares[i].style),{},{backgroundColor:\"\"});}}else{squares[i].style=_objectSpread(_objectSpread({},squares[i].style),{},{backgroundColor:\"RGB(111,143,114)\"});// Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\nthis.setState({status:\"Choose destination for the selected piece\",sourceSelection:i});}}else if(this.state.sourceSelection>-1){squares[this.state.sourceSelection].style=_objectSpread(_objectSpread({},squares[this.state.sourceSelection].style),{},{backgroundColor:\"\"});if(squares[i]&&squares[i].player===this.state.player&&(squares[this.state.sourceSelection].constructor.name===\"King\"||squares[this.state.sourceSelection].constructor.name===\"Rook\")&&(squares[i].constructor.name===\"King\"||squares[i].constructor.name===\"Rook\")){/////////////////castling case\nvar isPossible=true;if(squares[i].player===1){//check correct position of pieces\nif(this.state.sourceSelection===60&&squares[this.state.sourceSelection].constructor.name===\"King\"){if(i!==63&&i!==56)isPossible=false;}else if(i===60&&squares[i].constructor.name===\"King\"){if(this.state.sourceSelection!==63&&this.state.sourceSelection!==56)isPossible=false;}else isPossible=false;}else{if(this.state.sourceSelection===4&&squares[this.state.sourceSelection].constructor.name===\"King\"){if(i!==0&&i!==7)isPossible=false;}else if(i===4&&squares[i].constructor.name===\"King\"){if(this.state.sourceSelection!==0&&this.state.sourceSelection!==7)isPossible=false;}else isPossible=false;}if(isPossible){//check that there are no pieces between them\nif(squares[i].player===1){if(i===63||this.state.sourceSelection===63){if(squares[61]||squares[62])isPossible=false;}else{if(squares[57]||squares[58]||squares[59])isPossible=false;}}else{if(i===7||this.state.sourceSelection===7){if(squares[5]||squares[6])isPossible=false;}else{if(squares[1]||squares[2]||squares[3])isPossible=false;}}if(isPossible){//check if king is or passes from check\nif(squares[i].player===1){if(i===63||this.state.sourceSelection===63){for(var j=0;j<squares.length;j++){if(squares[j]&&squares[j].player!==this.state.player){var srcToDestPath1=squares[j].getSrcToDestPath(j,60);var srcToDestPath2=squares[j].getSrcToDestPath(j,61);var srcToDestPath3=squares[j].getSrcToDestPath(j,62);if(squares[j].isMovePossible(j,60,false)&&this.isMoveLegal(srcToDestPath1,squares)||squares[j].isMovePossible(j,61,false)&&this.isMoveLegal(srcToDestPath2,squares)||squares[j].isMovePossible(j,62,false)&&this.isMoveLegal(srcToDestPath3,squares)){isPossible=false;break;}}}}else{for(var _j=0;_j<squares.length;_j++){if(squares[_j]&&squares[_j].player!==this.state.player){var _srcToDestPath=squares[_j].getSrcToDestPath(_j,60);var _srcToDestPath2=squares[_j].getSrcToDestPath(_j,59);var _srcToDestPath3=squares[_j].getSrcToDestPath(_j,58);if(squares[_j].isMovePossible(_j,60,false)&&this.isMoveLegal(_srcToDestPath,squares)||squares[_j].isMovePossible(_j,59,false)&&this.isMoveLegal(_srcToDestPath2,squares)||squares[_j].isMovePossible(_j,58,false)&&this.isMoveLegal(_srcToDestPath3,squares)){isPossible=false;break;}}}}}else{if(i===7||this.state.sourceSelection===7){for(var _j2=0;_j2<squares.length;_j2++){if(squares[_j2]&&squares[_j2].player!==this.state.player){var _srcToDestPath4=squares[_j2].getSrcToDestPath(_j2,4);var _srcToDestPath5=squares[_j2].getSrcToDestPath(_j2,5);var _srcToDestPath6=squares[_j2].getSrcToDestPath(_j2,6);if(squares[_j2].isMovePossible(_j2,4,false)&&this.isMoveLegal(_srcToDestPath4,squares)||squares[_j2].isMovePossible(_j2,5,false)&&this.isMoveLegal(_srcToDestPath5,squares)||squares[_j2].isMovePossible(_j2,6,false)&&this.isMoveLegal(_srcToDestPath6,squares)){isPossible=false;break;}}}}else{for(var _j3=0;_j3<squares.length;_j3++){if(squares[_j3]&&squares[_j3].player!==this.state.player){var _srcToDestPath7=squares[_j3].getSrcToDestPath(_j3,4);var _srcToDestPath8=squares[_j3].getSrcToDestPath(_j3,3);var _srcToDestPath9=squares[_j3].getSrcToDestPath(_j3,2);if(squares[_j3].isMovePossible(_j3,4,false)&&this.isMoveLegal(_srcToDestPath7,squares)||squares[_j3].isMovePossible(_j3,3,false)&&this.isMoveLegal(_srcToDestPath8,squares)||squares[_j3].isMovePossible(_j3,2,false)&&this.isMoveLegal(_srcToDestPath9,squares)){isPossible=false;break;}}}}}}}if(isPossible){if(squares[i].player===1){if(i===63||this.state.sourceSelection===63){squares[62]=squares[60];squares[61]=squares[63];squares[63]=null;}else{squares[58]=squares[60];squares[59]=squares[56];squares[56]=null;}squares[60]=null;}else{if(i===7||this.state.sourceSelection===7){squares[6]=squares[4];squares[5]=squares[7];squares[7]=null;}else{squares[2]=squares[4];squares[3]=squares[0];squares[0]=null;}squares[4]=null;}var player=this.state.player===1?2:1;var turn=this.state.turn==='white'?'black':'white';this.setState({squares:squares,player:player,turn:turn,type:turn,kingStatus:'',myTurn:!this.state.myTurn,changePawn:-1,status:\"Castling occured.\",sourceSelection:-1});var textSquares=this.classesToStrings(squares);var textWhiteFallenSoldiers=this.classesToStrings(this.state.whiteFallenSoldiers);var textBlackFallenSoldiers=this.classesToStrings(this.state.blackFallenSoldiers);var _message={roundID:this.state.roundID,board:textSquares,whiteFallenSoldiers:textWhiteFallenSoldiers,blackFallenSoldiers:textBlackFallenSoldiers,progress:0};this.state.socket.emit('update',_message);}else{this.setState({status:\"Wrong selection. Castling not allowed.\",sourceSelection:-1});}}else if(squares[i]&&squares[i].player===this.state.player){this.setState({status:\"Wrong selection. Choose valid source and destination again.\",sourceSelection:-1});}else{var whiteFallenSoldiers=this.state.whiteFallenSoldiers.slice();var blackFallenSoldiers=this.state.blackFallenSoldiers.slice();var isDestEnemyOccupied=squares[i]?true:false;var isMovePossible=squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection,i,isDestEnemyOccupied);var srcToDestPath=squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection,i);var isMoveLegal=this.isMoveLegal(srcToDestPath,squares);if(isMovePossible&&isMoveLegal){var whitePushed=false,blackPushed=false;if(squares[i]!==null){if(squares[i].player===1){whiteFallenSoldiers.push(squares[i]);whitePushed=true;}else{blackFallenSoldiers.push(squares[i]);blackPushed=true;}}var check=false;if(this.state.kingStatus===\"Check.\")check=true;var kingStatus=0;var saveSquare=squares[i];squares[i]=squares[this.state.sourceSelection];squares[this.state.sourceSelection]=null;var _player=this.state.player===1?2:1;var _turn=this.state.turn==='white'?'black':'white';this.setState({sourceSelection:-1,squares:squares,whiteFallenSoldiers:whiteFallenSoldiers,blackFallenSoldiers:blackFallenSoldiers,myTurn:!this.state.myTurn,player:_player,status:'',kingStatus:'',turn:_turn,type:_turn,changePawn:-1});var moveOn=true;if(check){for(var _j4=0;_j4<squares.length;_j4++){if(squares[_j4]&&squares[_j4].constructor.name===\"King\"&&squares[_j4].player===this.state.player){//find the king\nfor(var k=0;k<squares.length;k++){if(squares[k]&&squares[k].player!==this.state.player){var checkSrcToDestPath=squares[k].getSrcToDestPath(k,_j4);if(squares[k].isMovePossible(k,_j4,isDestEnemyOccupied)&&this.isMoveLegal(checkSrcToDestPath,squares)){//find if enemy threatens the king\nsquares[this.state.sourceSelection]=squares[i];squares[i]=saveSquare;_player=this.state.player===1?1:2;_turn=this.state.turn==='white'?'white':'black';if(whitePushed)whiteFallenSoldiers.pop();else if(blackPushed)blackFallenSoldiers.pop();this.setState({squares:squares,whiteFallenSoldiers:whiteFallenSoldiers,blackFallenSoldiers:blackFallenSoldiers,player:_player,myTurn:this.state.myTurn,kingStatus:\"Check.\",status:'Wrong selection. You need to avoid check.',turn:_turn,type:_turn});kingStatus=-1;moveOn=false;break;}}}break;}}}else{for(var _j5=0;_j5<squares.length;_j5++){if(squares[_j5]&&squares[_j5].constructor.name===\"King\"&&squares[_j5].player===this.state.player){//find the king\nfor(var _k=0;_k<squares.length;_k++){if(squares[_k]&&squares[_k].player!==this.state.player){var _checkSrcToDestPath=squares[_k].getSrcToDestPath(_k,_j5);if(squares[_k].isMovePossible(_k,_j5,isDestEnemyOccupied)&&this.isMoveLegal(_checkSrcToDestPath,squares)){//find if enemy threatens the king\nsquares[this.state.sourceSelection]=squares[i];squares[i]=saveSquare;_player=this.state.player===1?1:2;_turn=this.state.turn==='white'?'white':'black';if(whitePushed)whiteFallenSoldiers.pop();else if(blackPushed)blackFallenSoldiers.pop();this.setState({squares:squares,whiteFallenSoldiers:whiteFallenSoldiers,blackFallenSoldiers:blackFallenSoldiers,myTurn:this.state.myTurn,player:_player,kingStatus:'',status:'Wrong selection. You cannot go to check.',turn:_turn,type:_turn});kingStatus=-1;moveOn=false;break;}}}break;}}}if(moveOn){//code for check and checkmate\nfor(var _j6=0;_j6<squares.length;_j6++){if(squares[_j6]&&squares[_j6].constructor.name===\"King\"&&squares[_j6].player!==this.state.player){//find the king\nfor(var _k2=0;_k2<squares.length;_k2++){if(squares[_k2]&&squares[_k2].player===this.state.player){var _srcToDestPath10=squares[_k2].getSrcToDestPath(_k2,_j6);if(squares[_k2].isMovePossible(_k2,_j6,isDestEnemyOccupied)&&this.isMoveLegal(_srcToDestPath10,squares)){//find if enemy threatens the king\nvar itisCheck=false;_srcToDestPath10[_srcToDestPath10.length]=_k2;for(var l=0;l<squares.length;l++){if(squares[l]&&squares[l].player!==this.state.player){for(var m=0;m<_srcToDestPath10.length;m++){if(squares[l].isMovePossible(l,_srcToDestPath10[m],isDestEnemyOccupied)&&this.isMoveLegal(squares[l].getSrcToDestPath(l,_srcToDestPath10[m]),squares)&&squares[l].constructor.name!==\"King\"){itisCheck=true;break;}}}}if(itisCheck===true){//find king's possible moves and check if they avoid checkmate\nvar countMoves=0;if((!squares[_j6-1]||_j6-1===_k2)&&_j6-1>=0){for(var _l=0;_l<squares.length;_l++){if(squares[_l]&&squares[_l].player===this.state.player&&_l!==_k2){var _isDestEnemyOccupied=squares[_l]?true:false;if(squares[_l].isMovePossible(_l,_j6-1,_isDestEnemyOccupied)&&this.isMoveLegal(squares[_l].getSrcToDestPath(_l,_j6-1),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6+1]||_j6+1===_k2)&&_j6+1<64){for(var _l2=0;_l2<squares.length;_l2++){if(squares[_l2]&&squares[_l2].player===this.state.player&&_l2!==_k2){var _isDestEnemyOccupied2=squares[_l2]?true:false;if(squares[_l2].isMovePossible(_l2,_j6+1,_isDestEnemyOccupied2)&&this.isMoveLegal(squares[_l2].getSrcToDestPath(_l2,_j6+1),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6-7]||_j6-7===_k2)&&_j6-7>=0){for(var _l3=0;_l3<squares.length;_l3++){if(squares[_l3]&&squares[_l3].player===this.state.player&&_l3!==_k2){var _isDestEnemyOccupied3=squares[_l3]?true:false;if(squares[_l3].isMovePossible(_l3,_j6-7,_isDestEnemyOccupied3)&&this.isMoveLegal(squares[_l3].getSrcToDestPath(_l3,_j6-7),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6+7]||_j6+7===_k2)&&_j6+7<64){for(var _l4=0;_l4<squares.length;_l4++){if(squares[_l4]&&squares[_l4].player===this.state.player&&_l4!==_k2){var _isDestEnemyOccupied4=squares[_l4]?true:false;if(squares[_l4].isMovePossible(_l4,_j6+7,_isDestEnemyOccupied4)&&this.isMoveLegal(squares[_l4].getSrcToDestPath(_l4,_j6+7),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6-8]||_j6-8===_k2)&&_j6-8>=0){for(var _l5=0;_l5<squares.length;_l5++){if(squares[_l5]&&squares[_l5].player===this.state.player&&_l5!==_k2){var _isDestEnemyOccupied5=squares[_l5]?true:false;if(squares[_l5].isMovePossible(_l5,_j6-8,_isDestEnemyOccupied5)&&this.isMoveLegal(squares[_l5].getSrcToDestPath(_l5,_j6-8),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6+8]||_j6+8===_k2)&&_j6+8<64){for(var _l6=0;_l6<squares.length;_l6++){if(squares[_l6]&&squares[_l6].player===this.state.player&&_l6!==_k2){var _isDestEnemyOccupied6=squares[_l6]?true:false;if(squares[_l6].isMovePossible(_l6,_j6+8,_isDestEnemyOccupied6)&&this.isMoveLegal(squares[_l6].getSrcToDestPath(_l6,_j6+8),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6-9]||_j6-9===_k2)&&_j6-9>=0){for(var _l7=0;_l7<squares.length;_l7++){if(squares[_l7]&&squares[_l7].player===this.state.player&&_l7!==_k2){var _isDestEnemyOccupied7=squares[_l7]?true:false;if(squares[_l7].isMovePossible(_l7,_j6-9,_isDestEnemyOccupied7)&&this.isMoveLegal(squares[_l7].getSrcToDestPath(_l7,_j6-9),squares)){countMoves++;break;}}}}else countMoves++;if((!squares[_j6+9]||_j6+9===_k2)&&_j6+9<64){for(var _l8=0;_l8<squares.length;_l8++){if(squares[_l8]&&squares[_l8].player===this.state.player&&_l8!==_k2){var _isDestEnemyOccupied8=squares[_l8]?true:false;if(squares[_l8].isMovePossible(_l8,_j6+9,_isDestEnemyOccupied8)&&this.isMoveLegal(squares[_l8].getSrcToDestPath(_l8,_j6+9),squares)){countMoves++;break;}}}}else countMoves++;if(countMoves===8)itisCheck=false;}if(itisCheck===true){this.setState({kingStatus:\"Check.\"});kingStatus=1;}else{this.setState({kingStatus:\"Checkmate.\"});kingStatus=2;}break;}}}break;}}//code for stalemate\nvar blackPieces=0,whitePieces=0;for(var _j7=0;_j7<squares.length;_j7++){if(squares[_j7]){if(squares[_j7].player===1)whitePieces++;else blackPieces++;}}if(blackPieces===1&&whitePieces===1){this.setState({kingStatus:\"Stalemate.\"});kingStatus=3;}else if(blackPieces===1&&this.state.player===1||whitePieces===1&&this.state.player===2){for(var _j8=0;_j8<squares.length;_j8++){if(squares[_j8]&&squares[_j8].constructor.name===\"King\"&&squares[_j8].player!==this.state.player){//find the king\nvar _countMoves=0;if(!squares[_j8-1]&&_j8-1>0){for(var _l9=0;_l9<squares.length;_l9++){if(squares[_l9]&&squares[_l9].player===this.state.player){var _isDestEnemyOccupied9=squares[_l9]?true:false;if(squares[_l9].isMovePossible(_l9,_j8-1,_isDestEnemyOccupied9)&&this.isMoveLegal(squares[_l9].getSrcToDestPath(_l9,_j8-1),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8+1]&&_j8+1<64){for(var _l10=0;_l10<squares.length;_l10++){if(squares[_l10]&&squares[_l10].player===this.state.player){var _isDestEnemyOccupied10=squares[_l10]?true:false;if(squares[_l10].isMovePossible(_l10,_j8+1,_isDestEnemyOccupied10)&&this.isMoveLegal(squares[_l10].getSrcToDestPath(_l10,_j8+1),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8-7]&&_j8-7>0){for(var _l11=0;_l11<squares.length;_l11++){if(squares[_l11]&&squares[_l11].player===this.state.player){var _isDestEnemyOccupied11=squares[_l11]?true:false;if(squares[_l11].isMovePossible(_l11,_j8-7,_isDestEnemyOccupied11)&&this.isMoveLegal(squares[_l11].getSrcToDestPath(_l11,_j8-7),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8+7]&&_j8+7<64){for(var _l12=0;_l12<squares.length;_l12++){if(squares[_l12]&&squares[_l12].player===this.state.player){var _isDestEnemyOccupied12=squares[_l12]?true:false;if(squares[_l12].isMovePossible(_l12,_j8+7,_isDestEnemyOccupied12)&&this.isMoveLegal(squares[_l12].getSrcToDestPath(_l12,_j8+7),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8-8]&&_j8-8>0){for(var _l13=0;_l13<squares.length;_l13++){if(squares[_l13]&&squares[_l13].player===this.state.player){var _isDestEnemyOccupied13=squares[_l13]?true:false;if(squares[_l13].isMovePossible(_l13,_j8-8,_isDestEnemyOccupied13)&&this.isMoveLegal(squares[_l13].getSrcToDestPath(_l13,_j8-8),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8+8]&&_j8+8<64){for(var _l14=0;_l14<squares.length;_l14++){if(squares[_l14]&&squares[_l14].player===this.state.player){var _isDestEnemyOccupied14=squares[_l14]?true:false;if(squares[_l14].isMovePossible(_l14,_j8+8,_isDestEnemyOccupied14)&&this.isMoveLegal(squares[_l14].getSrcToDestPath(_l14,_j8+8),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8-9]&&_j8-9>0){for(var _l15=0;_l15<squares.length;_l15++){if(squares[_l15]&&squares[_l15].player===this.state.player){var _isDestEnemyOccupied15=squares[_l15]?true:false;if(squares[_l15].isMovePossible(_l15,_j8-9,_isDestEnemyOccupied15)&&this.isMoveLegal(squares[_l15].getSrcToDestPath(_l15,_j8-9),squares)){_countMoves++;break;}}}}else _countMoves++;if(!squares[_j8+9]&&_j8+9<64){for(var _l16=0;_l16<squares.length;_l16++){if(squares[_l16]&&squares[_l16].player===this.state.player){var _isDestEnemyOccupied16=squares[_l16]?true:false;if(squares[_l16].isMovePossible(_l16,_j8+9,_isDestEnemyOccupied16)&&this.isMoveLegal(squares[_l16].getSrcToDestPath(_l16,_j8+9),squares)){_countMoves++;break;}}}}else _countMoves++;if(_countMoves===8){this.setState({kingStatus:\"Stalemate.\"});kingStatus=3;}break;}}}//code for pawn change\nif(this.state.player===1){for(var _j9=0;_j9<8;_j9++){if(squares[_j9]&&squares[_j9].player===1&&squares[_j9].constructor.name===\"Pawn\"){this.setState({changePawn:_j9});break;}}}else{for(var _j10=56;_j10<64;_j10++){if(squares[_j10]&&squares[_j10].player===2&&squares[_j10].constructor.name===\"Pawn\"){this.setState({changePawn:_j10});break;}}}}if(kingStatus!==-1){textSquares=this.classesToStrings(squares);textWhiteFallenSoldiers=this.classesToStrings(whiteFallenSoldiers);textBlackFallenSoldiers=this.classesToStrings(blackFallenSoldiers);var message={roundID:this.state.roundID,board:textSquares,whiteFallenSoldiers:textWhiteFallenSoldiers,blackFallenSoldiers:textBlackFallenSoldiers,kingStatus:'',progress:0};if(kingStatus===2){message={roundID:this.state.roundID,board:textSquares,kingStatus:'Checkmate.',whiteFallenSoldiers:textWhiteFallenSoldiers,blackFallenSoldiers:textBlackFallenSoldiers,progress:1};}else if(kingStatus===3){message={roundID:this.state.roundID,board:textSquares,kingStatus:'Stalemate.',whiteFallenSoldiers:textWhiteFallenSoldiers,blackFallenSoldiers:textBlackFallenSoldiers,progress:2};}else if(kingStatus===1){message={roundID:this.state.roundID,board:textSquares,whiteFallenSoldiers:textWhiteFallenSoldiers,blackFallenSoldiers:textBlackFallenSoldiers,kingStatus:'Check.',progress:0};}this.state.socket.emit('update',message);}}else{this.setState({status:\"Wrong selection. Choose valid source and destination again.\",sourceSelection:-1});}}}}}/**\n   * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\n   * @param  {[type]}  srcToDestPath [array of board indices comprising path between src and dest ]\n   * @return {Boolean}               \n   */},{key:\"isMoveLegal\",value:function isMoveLegal(srcToDestPath,squares){var isLegal=true;for(var i=0;i<srcToDestPath.length;i++){if(squares[srcToDestPath[i]]!==null){isLegal=false;}}return isLegal;}},{key:\"classesToStrings\",value:function classesToStrings(squares){var textSquares=[];for(var i=0;i<squares.length;i++){if(squares[i]){switch(squares[i].constructor.name){case\"King\":if(squares[i].player===1)textSquares.push(\"King 1\");else textSquares.push(\"King 2\");break;case\"Pawn\":if(squares[i].player===1)textSquares.push(\"Pawn 1\");else textSquares.push(\"Pawn 2\");break;case\"Queen\":if(squares[i].player===1)textSquares.push(\"Queen 1\");else textSquares.push(\"Queen 2\");break;case\"Bishop\":if(squares[i].player===1)textSquares.push(\"Bishop 1\");else textSquares.push(\"Bishop 2\");break;case\"Knight\":if(squares[i].player===1)textSquares.push(\"Knight 1\");else textSquares.push(\"Knight 2\");break;case\"Rook\":if(squares[i].player===1)textSquares.push(\"Rook 1\");else textSquares.push(\"Rook 2\");break;default:break;}}else{textSquares.push(0);}}return textSquares;}},{key:\"setBishop\",value:function setBishop(){var newSquares=this.state.squares;if(this.state.player===1){newSquares[this.state.changePawn]=new Bishop(2);this.setState({squares:newSquares,changePawn:-1});}else{newSquares[this.state.changePawn]=new Bishop(1);this.setState({squares:newSquares,changePawn:-1});}var textSquares=this.classesToStrings(this.state.squares);var message={roundID:this.state.roundID,board:textSquares,dontChange:true};this.state.socket.emit('update',message);}},{key:\"setQueen\",value:function setQueen(){var newSquares=this.state.squares;if(this.state.player===1){newSquares[this.state.changePawn]=new Queen(2);this.setState({squares:newSquares,changePawn:-1});}else{newSquares[this.state.changePawn]=new Queen(1);this.setState({squares:newSquares,changePawn:-1});}var textSquares=this.classesToStrings(this.state.squares);var message={roundID:this.state.roundID,board:textSquares,dontChange:true};this.state.socket.emit('update',message);}},{key:\"setKnight\",value:function setKnight(){var newSquares=this.state.squares;if(this.state.player===1){newSquares[this.state.changePawn]=new Knight(2);this.setState({squares:newSquares,changePawn:-1});}else{newSquares[this.state.changePawn]=new Knight(1);this.setState({squares:newSquares,changePawn:-1});}var textSquares=this.classesToStrings(this.state.squares);var message={roundID:this.state.roundID,board:textSquares,dontChange:true};this.state.socket.emit('update',message);}},{key:\"setRook\",value:function setRook(){var newSquares=this.state.squares;if(this.state.player===1){newSquares[this.state.changePawn]=new Rook(2);this.setState({squares:newSquares,changePawn:-1});}else{newSquares[this.state.changePawn]=new Rook(1);this.setState({squares:newSquares,changePawn:-1});}var textSquares=this.classesToStrings(this.state.squares);var message={roundID:this.state.roundID,board:textSquares,dontChange:true};this.state.socket.emit('update',message);}},{key:\"render\",value:function render(){var _this2=this;var showButtons=false;if(this.state.changePawn!==-1)showButtons=true;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-board\"},/*#__PURE__*/React.createElement(Board,{squares:this.state.squares,onClick:function onClick(i){return _this2.handleClick(i);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Turn\"),/*#__PURE__*/React.createElement(\"div\",{id:\"player-turn-box\",style:{backgroundColor:this.state.turn}}),/*#__PURE__*/React.createElement(\"div\",{className:\"game-status\"},this.state.kingStatus),/*#__PURE__*/React.createElement(\"div\",{className:\"game-status\"},this.state.status),/*#__PURE__*/React.createElement(\"div\",{className:\"fallen-soldier-block\"},/*#__PURE__*/React.createElement(FallenSoldierBlock,{whiteFallenSoldiers:this.state.whiteFallenSoldiers,blackFallenSoldiers:this.state.blackFallenSoldiers})),showButtons?/*#__PURE__*/React.createElement(\"div\",null,\" \",/*#__PURE__*/React.createElement(\"button\",{onClick:this.setBishop},\" Bishop \"),/*#__PURE__*/React.createElement(\"button\",{onClick:this.setQueen},\" Queen \"),/*#__PURE__*/React.createElement(\"button\",{onClick:this.setKnight},\" Knight \"),/*#__PURE__*/React.createElement(\"button\",{onClick:this.setRook},\" Rook \")):/*#__PURE__*/React.createElement(\"div\",null,\" \"))));}}]);return Game;}(React.Component);export{Game as default};","map":{"version":3,"sources":["/home/panagiotis/Desktop/ds_project/containers/Website/public_html/games/react-chess/src/components/game.js"],"names":["React","Board","FallenSoldierBlock","initialiseChessBoard","Bishop","Knight","Queen","Rook","conn","Game","props","args","getArgumenets","data","connect","state","squares","whiteFallenSoldiers","blackFallenSoldiers","player","sourceSelection","kingStatus","turn","type","myTurn","changePawn","host","gamemaster","token","socket","status","connectionStatus","progress","roundID","setBishop","bind","setQueen","setKnight","setRook","setListeners","i","slice","setState","style","backgroundColor","constructor","name","isPossible","j","length","srcToDestPath1","getSrcToDestPath","srcToDestPath2","srcToDestPath3","isMovePossible","isMoveLegal","textSquares","classesToStrings","textWhiteFallenSoldiers","textBlackFallenSoldiers","message","board","emit","isDestEnemyOccupied","srcToDestPath","whitePushed","blackPushed","push","check","saveSquare","moveOn","k","checkSrcToDestPath","pop","itisCheck","l","m","countMoves","blackPieces","whitePieces","isLegal","newSquares","dontChange","showButtons","handleClick","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../index.css';\nimport Board from './board.js';\nimport FallenSoldierBlock from './fallen-soldier-block.js';\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\nimport Bishop from '../pieces/bishop.js';\nimport Knight from '../pieces/knight.js';\nimport Queen from '../pieces/queen.js';\nimport Rook from '../pieces/rook.js';\nimport * as conn from './multiplayer.js'; \n\nexport default class Game extends React.Component {\n  constructor(props){\n    super(props);\n    let args = conn.getArgumenets();\n    let data = conn.connect(args['host']+':'+args['playmanster'],args['token']);\n    this.state = {\n      squares: initialiseChessBoard(),\n      whiteFallenSoldiers: [],\n      blackFallenSoldiers: [],\n      player: 1,\n      sourceSelection: -1,\n      kingStatus: '',\n      turn: 'white',\n      type: null,\n      myTurn: false,\n      changePawn: -1,\n      host: args['host'],\n      gamemaster: args['gamemaster'],\n      token: args['token'],\n      socket: data['socket'],\n      status: '',\n      connectionStatus: data['connectionStatus'],\n      progress: 0,\n      roundID: null\n    }\n    this.setBishop = this.setBishop.bind(this);\n    this.setQueen = this.setQueen.bind(this);\n    this.setKnight = this.setKnight.bind(this);\n    this.setRook = this.setRook.bind(this);\n    conn.setListeners(this);\n  }\n \n  handleClick(i){\n    if (this.state.myTurn){\n      const squares = this.state.squares.slice();\n      \n      if(this.state.sourceSelection === -1){\n        if(!squares[i] || squares[i].player !== this.state.player){\n          this.setState({status: \"Wrong selection. Choose player \" + this.state.player + \" pieces.\"});\n          if (squares[i]) {\n            squares[i].style = {...squares[i].style, backgroundColor: \"\"};\n          }\n        }\n        else{\n          squares[i].style = {...squares[i].style, backgroundColor: \"RGB(111,143,114)\"}; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n          this.setState({\n            status: \"Choose destination for the selected piece\",\n            sourceSelection: i\n          });\n        }\n      }else if(this.state.sourceSelection > -1){\n        squares[this.state.sourceSelection].style = {...squares[this.state.sourceSelection].style, backgroundColor: \"\"};\n\n        if(squares[i] && squares[i].player === this.state.player && \n          (squares[this.state.sourceSelection].constructor.name===\"King\" || squares[this.state.sourceSelection].constructor.name===\"Rook\") &&\n          (squares[i].constructor.name===\"King\" || squares[i].constructor.name===\"Rook\")){/////////////////castling case\n          \n          let isPossible = true;\n\n          if (squares[i].player === 1){//check correct position of pieces\n            if (this.state.sourceSelection===60 && squares[this.state.sourceSelection].constructor.name===\"King\"){\n              if (i!==63 && i!==56)\n                isPossible=false;\n            }else if (i===60 && squares[i].constructor.name===\"King\"){\n              if (this.state.sourceSelection!==63 && this.state.sourceSelection!==56)\n                isPossible=false;\n            }else\n              isPossible=false;\n          }else{\n            if (this.state.sourceSelection===4 && squares[this.state.sourceSelection].constructor.name===\"King\"){\n              if (i!==0 && i!==7)\n                isPossible=false;\n            }else if (i===4 && squares[i].constructor.name===\"King\"){\n              if (this.state.sourceSelection!==0 && this.state.sourceSelection!==7)\n                isPossible=false;\n            }else\n              isPossible=false;\n          }\n\n          if (isPossible){//check that there are no pieces between them\n            if (squares[i].player === 1){\n              if (i===63 || this.state.sourceSelection===63){\n                if (squares[61] || squares[62])\n                  isPossible=false;\n              }else{\n                if (squares[57] || squares[58] || squares[59])\n                  isPossible=false;\n              }\n            }else{\n              if (i===7 || this.state.sourceSelection===7){\n                if (squares[5] || squares[6])\n                  isPossible=false;\n              }else{\n                if (squares[1] || squares[2] || squares[3])\n                  isPossible=false;\n              }\n            }\n\n            if (isPossible){//check if king is or passes from check\n              if (squares[i].player === 1){\n                if (i===63 || this.state.sourceSelection===63){\n                  for (let j=0; j<squares.length; j++){\n                    if (squares[j] && squares[j].player!==this.state.player){\n                      const srcToDestPath1 = squares[j].getSrcToDestPath(j, 60);\n                      const srcToDestPath2 = squares[j].getSrcToDestPath(j, 61);\n                      const srcToDestPath3 = squares[j].getSrcToDestPath(j, 62);\n                      if ((squares[j].isMovePossible(j, 60, false) && this.isMoveLegal(srcToDestPath1, squares)) ||\n                          (squares[j].isMovePossible(j, 61, false) && this.isMoveLegal(srcToDestPath2, squares)) ||\n                          (squares[j].isMovePossible(j, 62, false) && this.isMoveLegal(srcToDestPath3, squares))){\n                        isPossible=false;\n                        break;\n                      }\n                    }\n                  }\n                }else{\n                  for (let j=0; j<squares.length; j++){\n                    if (squares[j] && squares[j].player!==this.state.player){\n                      const srcToDestPath1 = squares[j].getSrcToDestPath(j, 60);\n                      const srcToDestPath2 = squares[j].getSrcToDestPath(j, 59);\n                      const srcToDestPath3 = squares[j].getSrcToDestPath(j, 58);\n                      if ((squares[j].isMovePossible(j, 60, false) && this.isMoveLegal(srcToDestPath1, squares)) ||\n                          (squares[j].isMovePossible(j, 59, false) && this.isMoveLegal(srcToDestPath2, squares)) ||\n                          (squares[j].isMovePossible(j, 58, false) && this.isMoveLegal(srcToDestPath3, squares))){\n                        isPossible=false;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }else{\n                if (i===7 || this.state.sourceSelection===7){\n                  for (let j=0; j<squares.length; j++){\n                    if (squares[j] && squares[j].player!==this.state.player){\n                      const srcToDestPath1 = squares[j].getSrcToDestPath(j, 4);\n                      const srcToDestPath2 = squares[j].getSrcToDestPath(j, 5);\n                      const srcToDestPath3 = squares[j].getSrcToDestPath(j, 6);\n                      if ((squares[j].isMovePossible(j, 4, false) && this.isMoveLegal(srcToDestPath1, squares)) ||\n                          (squares[j].isMovePossible(j, 5, false) && this.isMoveLegal(srcToDestPath2, squares)) ||\n                          (squares[j].isMovePossible(j, 6, false) && this.isMoveLegal(srcToDestPath3, squares))){\n                        isPossible=false;\n                        break;\n                      }\n                    }\n                  }\n                }else{\n                  for (let j=0; j<squares.length; j++){\n                    if (squares[j] && squares[j].player!==this.state.player){\n                      const srcToDestPath1 = squares[j].getSrcToDestPath(j, 4);\n                      const srcToDestPath2 = squares[j].getSrcToDestPath(j, 3);\n                      const srcToDestPath3 = squares[j].getSrcToDestPath(j, 2);\n                      if ((squares[j].isMovePossible(j, 4, false) && this.isMoveLegal(srcToDestPath1, squares)) ||\n                          (squares[j].isMovePossible(j, 3, false) && this.isMoveLegal(srcToDestPath2, squares)) ||\n                          (squares[j].isMovePossible(j, 2, false) && this.isMoveLegal(srcToDestPath3, squares))){\n                        isPossible=false;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (isPossible){\n            if (squares[i].player === 1){\n              if (i===63 || this.state.sourceSelection===63){\n                squares[62]=squares[60];\n                squares[61]=squares[63];\n                squares[63]=null;\n              }else{\n                squares[58]=squares[60];\n                squares[59]=squares[56];\n                squares[56]=null;\n              }\n              squares[60]=null;\n            }else{\n              if (i===7 || this.state.sourceSelection===7){\n                squares[6]=squares[4];\n                squares[5]=squares[7];\n                squares[7]=null;\n              }else{\n                squares[2]=squares[4];\n                squares[3]=squares[0];\n                squares[0]=null;\n              }\n              squares[4]=null;\n            }\n\n            let player = this.state.player === 1? 2: 1;\n            let turn = this.state.turn === 'white'? 'black' : 'white';\n            this.setState({\n              squares: squares,\n              player: player,\n              turn: turn,\n              type: turn,\n              kingStatus: '',\n              myTurn: !this.state.myTurn,\n              changePawn: -1,\n              status: \"Castling occured.\",\n              sourceSelection: -1,\n            });\n            var textSquares = this.classesToStrings(squares);\n            var textWhiteFallenSoldiers = this.classesToStrings(this.state.whiteFallenSoldiers);\n            var textBlackFallenSoldiers = this.classesToStrings(this.state.blackFallenSoldiers);\n            let message = {\n              roundID : this.state.roundID,\n              board : textSquares,\n              whiteFallenSoldiers: textWhiteFallenSoldiers,\n              blackFallenSoldiers: textBlackFallenSoldiers,\n              progress : 0\n            }\n            this.state.socket.emit('update', message);\n          }else{\n            this.setState({\n              status: \"Wrong selection. Castling not allowed.\",\n              sourceSelection: -1,\n            });\n          }\n\n        }else if(squares[i] && squares[i].player === this.state.player){\n          this.setState({\n            status: \"Wrong selection. Choose valid source and destination again.\",\n            sourceSelection: -1,\n          });\n        }else{\n          const whiteFallenSoldiers = this.state.whiteFallenSoldiers.slice();\n          const blackFallenSoldiers = this.state.blackFallenSoldiers.slice();\n          const isDestEnemyOccupied = squares[i]? true : false; \n          const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\n          const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n          const isMoveLegal = this.isMoveLegal(srcToDestPath, squares);\n\n          if(isMovePossible && isMoveLegal){\n            let whitePushed=false, blackPushed=false;\n            if(squares[i] !== null){\n              if(squares[i].player === 1){\n                whiteFallenSoldiers.push(squares[i]);     \n                whitePushed=true;         \n              }else{\n                blackFallenSoldiers.push(squares[i]);\n                blackPushed=true;\n              }\n            }\n\n            let check=false;\n            if (this.state.kingStatus===\"Check.\")\n              check=true;\n\n            var kingStatus = 0;\n            const saveSquare = squares[i];\n            squares[i] = squares[this.state.sourceSelection];\n            squares[this.state.sourceSelection] = null;\n            let player = this.state.player === 1? 2: 1;\n            let turn = this.state.turn === 'white'? 'black' : 'white';\n            this.setState({\n              sourceSelection: -1,\n              squares: squares,\n              whiteFallenSoldiers: whiteFallenSoldiers,\n              blackFallenSoldiers: blackFallenSoldiers,\n              myTurn: !this.state.myTurn,\n              player: player,\n              status: '',\n              kingStatus: '',\n              turn: turn,\n              type: turn,\n              changePawn: -1\n            });\n\n            let moveOn=true;\n            if (check){\n              for (let j=0; j<squares.length; j++){\n                if (squares[j] && squares[j].constructor.name===\"King\" && squares[j].player===this.state.player){//find the king\n                  for (let k=0; k<squares.length; k++){\n                    if (squares[k] && squares[k].player!==this.state.player){\n                      const checkSrcToDestPath = squares[k].getSrcToDestPath(k, j);\n                      if (squares[k].isMovePossible(k, j, isDestEnemyOccupied) && this.isMoveLegal(checkSrcToDestPath, squares)){//find if enemy threatens the king\n                        squares[this.state.sourceSelection] = squares[i];\n                        squares[i]=saveSquare;\n                        player = this.state.player === 1? 1: 2;\n                        turn = this.state.turn === 'white'? 'white' : 'black';\n                        if (whitePushed)\n                          whiteFallenSoldiers.pop();\n                        else if(blackPushed)\n                          blackFallenSoldiers.pop();\n                        this.setState({\n                          squares: squares,\n                          whiteFallenSoldiers: whiteFallenSoldiers,\n                          blackFallenSoldiers: blackFallenSoldiers,\n                          player: player,\n                          myTurn: this.state.myTurn,\n                          kingStatus: \"Check.\",\n                          status: 'Wrong selection. You need to avoid check.',\n                          turn: turn,\n                          type: turn\n                        });\n                        kingStatus=-1;\n                        moveOn=false;\n                        break;\n                      }\n                    }\n                  }\n                  break;\n                }\n              }\n            }else{\n              for (let j=0; j<squares.length; j++){\n                if (squares[j] && squares[j].constructor.name===\"King\" && squares[j].player===this.state.player){//find the king\n                  for (let k=0; k<squares.length; k++){\n                    if (squares[k] && squares[k].player!==this.state.player){\n                      const checkSrcToDestPath = squares[k].getSrcToDestPath(k, j);\n                      if (squares[k].isMovePossible(k, j, isDestEnemyOccupied) && this.isMoveLegal(checkSrcToDestPath, squares)){//find if enemy threatens the king\n                        squares[this.state.sourceSelection] = squares[i];\n                        squares[i]=saveSquare;\n                        player = this.state.player === 1? 1: 2;\n                        turn = this.state.turn === 'white'? 'white' : 'black';\n                        if (whitePushed)\n                          whiteFallenSoldiers.pop();\n                        else if(blackPushed)\n                          blackFallenSoldiers.pop();\n                        this.setState({\n                          squares: squares,\n                          whiteFallenSoldiers: whiteFallenSoldiers,\n                          blackFallenSoldiers: blackFallenSoldiers,\n                          myTurn: this.state.myTurn,\n                          player: player,\n                          kingStatus: '',\n                          status: 'Wrong selection. You cannot go to check.',\n                          turn: turn,\n                          type: turn\n                        });\n                        kingStatus=-1;\n                        moveOn=false;\n                        break;\n                      }\n                    }\n                  }\n                  break;\n                }\n              }\n            }\n\n            if (moveOn){\n              //code for check and checkmate\n              for (let j=0; j<squares.length; j++){\n                if (squares[j] && squares[j].constructor.name===\"King\" && squares[j].player!==this.state.player){//find the king\n                  for (let k=0; k<squares.length; k++){\n                    if (squares[k] && squares[k].player===this.state.player){\n                      const srcToDestPath = squares[k].getSrcToDestPath(k, j);\n                      if (squares[k].isMovePossible(k, j, isDestEnemyOccupied) && this.isMoveLegal(srcToDestPath, squares)){//find if enemy threatens the king\n                        let itisCheck=false;\n                        srcToDestPath[srcToDestPath.length]=k;\n\n                        for (let l=0; l<squares.length; l++){\n                          if (squares[l] && squares[l].player!==this.state.player){\n                            for (let m=0; m<srcToDestPath.length; m++){\n                              if (squares[l].isMovePossible(l, srcToDestPath[m], isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, srcToDestPath[m]), squares) \n                                && squares[l].constructor.name!==\"King\"){\n                                itisCheck=true;\n                                break;\n                              }\n                            }\n                          }\n                        }\n\n                        if (itisCheck===true){//find king's possible moves and check if they avoid checkmate\n                          let countMoves = 0;\n\n                          if ((!squares[j-1] || j-1===k) && j-1>=0){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false; \n                                if (squares[l].isMovePossible(l, j-1, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-1), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n            \n                          if ((!squares[j+1] || (j+1)===k) && j+1<64){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                  if (squares[l].isMovePossible(l, j+1, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+1), squares)){\n                                    countMoves++;\n                                    break;\n                                  }\n                                }\n                              }\n                            }else\n                              countMoves++;\n\n                          if ((!squares[j-7] || (j-7)===k) && j-7>=0){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                if (squares[l].isMovePossible(l, j-7, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-7), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n\n                          if ((!squares[j+7] || (j+7)===k) && j+7<64){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                if (squares[l].isMovePossible(l, j+7, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+7), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n\n                          if ((!squares[j-8] || (j-8)===k) && j-8>=0){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                if (squares[l].isMovePossible(l, j-8, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-8), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n\n                          if ((!squares[j+8] || (j+8)===k) && j+8<64){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                if (squares[l].isMovePossible(l, j+8, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+8), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n\n                          if ((!squares[j-9] || (j-9)===k) && j-9>=0){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                if (squares[l].isMovePossible(l, j-9, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-9), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n\n                          if ((!squares[j+9] || (j+9)===k) && j+9<64){\n                            for (let l=0; l<squares.length; l++){\n                              if (squares[l] && squares[l].player===this.state.player && l!==k){\n                                const isDestEnemyOccupied = squares[l]? true : false;\n                                if (squares[l].isMovePossible(l, j+9, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+9), squares)){\n                                  countMoves++;\n                                  break;\n                                }\n                              }\n                            }\n                          }else\n                            countMoves++;\n\n                          if (countMoves===8)\n                            itisCheck=false;\n                        }\n                                              \n                        if (itisCheck===true){\n                          this.setState({kingStatus: \"Check.\"});\n                          kingStatus=1;\n                        }else{\n                          this.setState({kingStatus: \"Checkmate.\"});\n                          kingStatus=2;\n                        }\n\n                        break;\n                      }\n                    }\n                  }\n                  break;\n                }\n              } \n\n              //code for stalemate\n              let blackPieces=0, whitePieces=0; \n              for (let j=0; j<squares.length; j++){\n                if (squares[j]){\n                  if (squares[j].player===1)\n                    whitePieces++;\n                  else\n                    blackPieces++;\n                }\n              }\n\n              if (blackPieces===1 && whitePieces===1){\n                this.setState({kingStatus: \"Stalemate.\"});\n                kingStatus=3;\n              }else if ((blackPieces===1 && this.state.player===1) || (whitePieces===1 && this.state.player===2)){\n                for (let j=0; j<squares.length; j++){\n                  if (squares[j] && squares[j].constructor.name===\"King\" && squares[j].player!==this.state.player){//find the king\n                    let countMoves = 0;\n\n                    if (!squares[j-1] && j-1>0){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j-1, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-1), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n\n                    if (!squares[j+1] && j+1<64){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j+1, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+1), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n\n                    if (!squares[j-7] && j-7>0){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j-7, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-7), squares)){\n                            countMoves++;\n                             break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n\n                    if (!squares[j+7] && j+7<64){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j+7, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+7), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n\n                   if (!squares[j-8] && j-8>0){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j-8, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-8), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n                    \n                    if (!squares[j+8] && j+8<64){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j+8, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+8), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n\n                    if (!squares[j-9] && j-9>0){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j-9, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j-9), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n\n                    if (!squares[j+9] && j+9<64){\n                      for (let l=0; l<squares.length; l++){\n                        if (squares[l] && squares[l].player===this.state.player){\n                          const isDestEnemyOccupied = squares[l]? true : false;\n                          if (squares[l].isMovePossible(l, j+9, isDestEnemyOccupied) && this.isMoveLegal(squares[l].getSrcToDestPath(l, j+9), squares)){\n                            countMoves++;\n                            break;\n                          }\n                        }\n                      }\n                    }else\n                      countMoves++;\n                    \n                   if (countMoves===8){\n                      this.setState({kingStatus: \"Stalemate.\"});\n                      kingStatus=3;\n                   }\n\n                    break;\n                  }\n                }\n              }\n\n              //code for pawn change\n              if (this.state.player===1){\n                for (let j=0; j<8; j++){\n                  if (squares[j] && squares[j].player===1 && squares[j].constructor.name===\"Pawn\"){\n                    this.setState({changePawn: j});\n                    break;\n                  }\n                }\n              }else{\n                for (let j=56; j<64; j++){\n                  if (squares[j] && squares[j].player===2 && squares[j].constructor.name===\"Pawn\"){\n                    this.setState({changePawn: j});\n                    break;\n                  }\n                }\n              }\n            }\n            if (kingStatus!==-1){\n\n\n              textSquares = this.classesToStrings(squares);\n              textWhiteFallenSoldiers = this.classesToStrings(whiteFallenSoldiers);\n              textBlackFallenSoldiers = this.classesToStrings(blackFallenSoldiers);\n              var message = {\n                roundID : this.state.roundID,\n                board : textSquares,\n                whiteFallenSoldiers: textWhiteFallenSoldiers,\n                blackFallenSoldiers: textBlackFallenSoldiers,\n                kingStatus: '',\n                progress : 0\n              }\n\n              if (kingStatus===2){\n                message = {\n                  roundID : this.state.roundID,\n                  board : textSquares,\n                  kingStatus: 'Checkmate.',\n                  whiteFallenSoldiers: textWhiteFallenSoldiers,\n                  blackFallenSoldiers: textBlackFallenSoldiers,\n                  progress : 1\n                }\n              }else if(kingStatus===3){\n                message = {\n                  roundID : this.state.roundID,\n                  board : textSquares,\n                  kingStatus: 'Stalemate.',\n                  whiteFallenSoldiers: textWhiteFallenSoldiers,\n                  blackFallenSoldiers: textBlackFallenSoldiers,\n                  progress : 2\n                }\n              }else if(kingStatus===1){\n                message = {\n                  roundID : this.state.roundID,\n                  board : textSquares,\n                  whiteFallenSoldiers: textWhiteFallenSoldiers,\n                  blackFallenSoldiers: textBlackFallenSoldiers,\n                  kingStatus: 'Check.',\n                  progress : 0\n                }\n              }\n                        \n              this.state.socket.emit('update', message);\n            }\n          }else{\n            this.setState({\n              status: \"Wrong selection. Choose valid source and destination again.\",\n              sourceSelection: -1,\n            });\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\n   * @param  {[type]}  srcToDestPath [array of board indices comprising path between src and dest ]\n   * @return {Boolean}               \n   */ \n  isMoveLegal(srcToDestPath, squares){\n    let isLegal = true;\n    for(let i = 0; i < srcToDestPath.length; i++){\n      if(squares[srcToDestPath[i]] !== null){\n        isLegal = false;\n      }\n    }\n    return isLegal;\n  }\n\n  classesToStrings(squares){\n   var textSquares = [];\n    for (let i=0; i<squares.length; i++){\n      if (squares[i]){\n        switch(squares[i].constructor.name){\n          case \"King\":\n            if (squares[i].player===1)\n              textSquares.push(\"King 1\");\n            else\n              textSquares.push(\"King 2\");\n            break;\n          case \"Pawn\":\n            if (squares[i].player===1)\n              textSquares.push(\"Pawn 1\");\n            else\n              textSquares.push(\"Pawn 2\");\n            break;\n          case \"Queen\":\n            if (squares[i].player===1)\n              textSquares.push(\"Queen 1\");\n            else\n              textSquares.push(\"Queen 2\");\n            break;\n          case \"Bishop\":\n            if (squares[i].player===1)\n              textSquares.push(\"Bishop 1\");\n            else\n              textSquares.push(\"Bishop 2\");\n            break;\n          case \"Knight\":\n            if (squares[i].player===1)\n              textSquares.push(\"Knight 1\");\n            else\n              textSquares.push(\"Knight 2\");\n            break;\n          case \"Rook\":\n            if (squares[i].player===1)\n              textSquares.push(\"Rook 1\");\n            else\n              textSquares.push(\"Rook 2\");\n            break;\n          default:\n            break;\n        }\n      }else{\n        textSquares.push(0);\n      }\n    }\n    return textSquares;\n  }\n\n  setBishop(){\n    let newSquares = this.state.squares;\n    if (this.state.player===1){\n      newSquares[this.state.changePawn] = new Bishop(2);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }else{\n      newSquares[this.state.changePawn] = new Bishop(1);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }\n    var textSquares = this.classesToStrings(this.state.squares);\n    var message = {\n      roundID : this.state.roundID,\n      board: textSquares,\n      dontChange: true\n    }\n    this.state.socket.emit('update', message);\n  }\n\n  setQueen(){\n    let newSquares = this.state.squares;\n    if (this.state.player===1){\n      newSquares[this.state.changePawn] = new Queen(2);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }else{\n      newSquares[this.state.changePawn] = new Queen(1);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }\n    var textSquares = this.classesToStrings(this.state.squares);\n    var message = {\n      roundID : this.state.roundID,\n      board: textSquares,\n      dontChange: true\n    }\n    this.state.socket.emit('update', message);\n  }\n\n  setKnight(){\n    let newSquares = this.state.squares;\n    if (this.state.player===1){\n      newSquares[this.state.changePawn] = new Knight(2);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }else{\n      newSquares[this.state.changePawn] = new Knight(1);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }\n    var textSquares = this.classesToStrings(this.state.squares);\n    var message = {\n      roundID : this.state.roundID,\n      board: textSquares,\n      dontChange: true\n    }\n    this.state.socket.emit('update', message);\n  }\n\n  setRook(){\n    let newSquares = this.state.squares;\n    if (this.state.player===1){\n      newSquares[this.state.changePawn] = new Rook(2);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }else{\n      newSquares[this.state.changePawn] = new Rook(1);\n      this.setState({\n        squares: newSquares,\n        changePawn: -1\n      });\n    }\n    var textSquares = this.classesToStrings(this.state.squares);\n    var message = {\n      roundID : this.state.roundID,\n      board: textSquares,\n      dontChange: true\n    }\n    this.state.socket.emit('update', message);\n  }\n\n  render() {\n    let showButtons=false;\n    if (this.state.changePawn!==-1)\n      showButtons=true;\n        \n    return (\n      <div>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n              squares = {this.state.squares}\n              onClick = {(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <h3>Turn</h3>\n            <div id=\"player-turn-box\" style={{backgroundColor: this.state.turn}}>\n  \n            </div>\n            <div className=\"game-status\">{this.state.kingStatus}</div>\n            <div className=\"game-status\">{this.state.status}</div>\n\n            <div className=\"fallen-soldier-block\">\n              \n              {<FallenSoldierBlock\n              whiteFallenSoldiers = {this.state.whiteFallenSoldiers}\n              blackFallenSoldiers = {this.state.blackFallenSoldiers}\n              />\n            }\n            </div>\n            {showButtons\n              ? <div> <button onClick = {this.setBishop}> Bishop </button> \n                      <button onClick = {this.setQueen}> Queen </button> \n                      <button onClick = {this.setKnight}> Knight </button> \n                      <button onClick = {this.setRook}> Rook </button> \n                </div>\n              : <div> </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}