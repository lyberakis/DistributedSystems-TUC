{"ast":null,"code":"var _jsxFileName = \"/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/Game.js\";\nimport React from 'react';\nimport './index.css';\nimport openSocket from 'socket.io-client'; // npm i socket.io-client\n//SQUARE\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.value);\n} //BOARD\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n} //GAME\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let url_string = window.location['href'];\n    let url = new URL(url_string);\n    let playmanster = url.searchParams.get(\"host\");\n    let token = url.searchParams.get(\"token\");\n    let handShake = {\n      query: 'token=' + token\n    };\n    this.state = {\n      squares: Array(9).fill(null),\n      myTurn: false,\n      token: token,\n      socket: openSocket(playmanster, handShake),\n      type: '-'\n    };\n    let self = this;\n    this.state.socket.on('type', type => {\n      let gtype = type == 'first' ? 'X' : 'O';\n      this.setState({\n        id: type,\n        type: gtype,\n        myTurn: gtype == 'X'\n      });\n    });\n    this.state.socket.on('board', board => {\n      this.setState({\n        squares: board,\n        myTurn: true\n      });\n    });\n  }\n\n  handleClick(i) {\n    if (this.state.myTurn) {\n      const squares = this.state.squares.slice(); //create a copy of the array\n      //if the game is over or the sqare is already filled, return\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.type;\n      this.setState({\n        squares: squares,\n        myTurn: !this.state.myTurn\n      });\n      this.state.socket.emit('update', squares);\n      let winStatus = calculateWinner(squares);\n      let isGameOver = checkGameOver(squares);\n\n      if (winStatus || isGameOver) {\n        let message = {\n          isWinner: winStatus == this.state.type,\n          isGameOver: isGameOver\n        };\n        this.state.socket.emit('gameOver', message);\n      }\n    }\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    const gameOver = checkGameOver(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner:' + winner;\n    } else if (gameOver) {\n      status = 'Game ended without winner!';\n    } else {\n      if (this.state.myTurn) {\n        status = 'Your turn!';\n      } else {\n        status = 'Waiting opponent...';\n      }\n    }\n\n    let test1 = this.state.token;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: this.state.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, \"Your symbol: \", this.state.type)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nfunction checkGameOver(squares) {\n  for (var i = 0; i < squares.length; i++) {\n    if (squares[i] == null) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/Game.js"],"names":["React","openSocket","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","url_string","window","location","url","URL","playmanster","searchParams","get","token","handShake","query","state","Array","fill","myTurn","socket","type","self","on","gtype","setState","id","board","handleClick","slice","calculateWinner","emit","winStatus","isGameOver","checkGameOver","message","isWinner","winner","gameOver","status","test1","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport openSocket from 'socket.io-client';\n\n// npm i socket.io-client\n\n\n//SQUARE\nfunction Square(props) {\n\n    return (\n        <button \n          className=\"square\" \n          onClick={props.onClick}\n        >\n            {props.value}\n        </button>\n    );\n}\n\n//BOARD\nclass Board extends React.Component {\n\t\n\trenderSquare(i) {\n    \treturn (\n    \t\t<Square \n    \t\t\tvalue={this.props.squares[i]}\n    \t\t\tonClick={() => this.props.onClick(i)}\n    \t\t/>);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n    \t);\n    }\n}\n\n\n//GAME\nclass Game extends React.Component {\n\tconstructor(props) {\n    \tsuper(props);\n    \t\n    \tlet url_string = window.location['href'];\n  \t\tlet url = new URL(url_string);\n  \t\tlet playmanster = url.searchParams.get(\"host\");\n  \t\tlet token = url.searchParams.get(\"token\");\n\n    \tlet handShake = {\n    \t\tquery:'token='+token\n    \t}\n\n    \tthis.state = {\n      \t\tsquares: Array(9).fill(null),\n    \t\tmyTurn: false,\n    \t\ttoken: token,\n    \t\tsocket: openSocket(playmanster,handShake),\n    \t\ttype: '-',\n \n    \t};\n\n    \tlet self = this;\n    \tthis.state.socket.on('type', type => {\n    \t\tlet gtype = type == 'first' ? 'X' : 'O' \n      \t\tthis.setState({\n      \t\t\tid: type,\n      \t\t\ttype: gtype,\n      \t\t\tmyTurn: gtype == 'X',\n      \t\t})\n    \t});\n\n    \tthis.state.socket.on('board', board => {\n\n      \t\tthis.setState({\n      \t\t\tsquares: board,\n      \t\t\tmyTurn: true,\n      \t\t})\n\t      \n    \t});   \n  \t}\n\n\thandleClick(i){\n\t  \tif (this.state.myTurn) {\n\t\t\tconst squares = this.state.squares.slice();   //create a copy of the array\n\n\t\t\t//if the game is over or the sqare is already filled, return\n\t\t\tif (calculateWinner(squares) || squares[i]){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsquares[i] = this.state.type;\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tsquares: squares,\n\t\t\t\tmyTurn: !this.state.myTurn,\n\t\t\t});\n\n\t\t\tthis.state.socket.emit('update', squares)\n\n\t\t\tlet winStatus = calculateWinner(squares);\n\t\t\tlet isGameOver = checkGameOver(squares);\n\n\t\t\tif(winStatus || isGameOver){\n\t\t\t\tlet message = {\n\t\t\t\t\tisWinner: winStatus == this.state.type,\n\t\t\t\t\tisGameOver: isGameOver\n\t\t\t\t}\n\t\t\t\tthis.state.socket.emit('gameOver', message)\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst winner = calculateWinner(this.state.squares);\n\t\tconst gameOver = checkGameOver(this.state.squares);\n\n  \t\tlet status;\n\n\t  \tif (winner) {\n\t  \t\tstatus = 'Winner:' + winner;\n\t  \t}else if (gameOver){\n\t  \t\tstatus = 'Game ended without winner!';\n\t  \t}else{\n\t  \t\tif (this.state.myTurn) {\n\t  \t\t\tstatus = 'Your turn!';\n\t  \t\t}else{\n\t  \t\t\tstatus = 'Waiting opponent...';\n\t  \t\t}\n\t  \t}\n\n\t  \tlet test1 = this.state.token;\n\n    \treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board \n\t\t\t\t\t\tsquares={this.state.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t  <div>{status}</div>\n\t\t\t\t  <div>Your symbol: {this.state.type}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction checkGameOver(squares){\n\tfor (var i = 0; i < squares.length; i++) {\n\t\tif (squares[i] == null) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}