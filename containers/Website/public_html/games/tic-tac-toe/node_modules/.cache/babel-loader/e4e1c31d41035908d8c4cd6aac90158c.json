{"ast":null,"code":"export function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\nexport function isGameEnded(squares) {\n  for (var i = 0; i < squares.length; i++) {\n    if (squares[i] == null) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/utils/gameConditions.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","isGameEnded"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,QAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACK,CAAD,CAAnC,IAA0CL,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACM,CAAD,CAAnE,EAAwE;AACtE,aAAON,OAAO,CAACI,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAGD,OAAO,SAASG,WAAT,CAAqBP,OAArB,EAA6B;AACnC,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACxC,QAAIF,OAAO,CAACE,CAAD,CAAP,IAAc,IAAlB,EAAwB;AACvB,aAAO,KAAP;AACA;AACD;;AACD,SAAO,IAAP;AACA","sourcesContent":["export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport function isGameEnded(squares){\n\tfor (var i = 0; i < squares.length; i++) {\n\t\tif (squares[i] == null) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n"]},"metadata":{},"sourceType":"module"}