{"ast":null,"code":"var _jsxFileName = \"/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/Game.js\";\nimport React from 'react';\nimport './index.css';\nimport * as condition from './utils/gameConditions.js';\nimport * as conn from './utils/multiplayer.js';\nimport * as ui from './utils/messages.js'; //SQUARE\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, props.value);\n} //BOARD\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n} //GAME\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props); //Establish Connection\n\n    let args = conn.getArgumenets();\n    let data = conn.connect(args['host'] + ':' + args['playmanster'], args['token']);\n    this.state = {\n      host: args['host'],\n      gamemaster: args['gamemaster'],\n      squares: Array(9).fill(null),\n      myTurn: false,\n      token: args['token'],\n      socket: data['socket'],\n      status: data['status'],\n      type: null,\n      roundID: null\n    }; //set event handlers for server messages\n\n    conn.setListeners(this);\n  }\n\n  handleClick(i) {\n    if (this.state.myTurn && this.state.state !== 5) {\n      const squares = this.state.squares.slice(); //create a copy of the array\n      //if the game is over or the sqare is already filled, return\n\n      if (condition.calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.type;\n      this.setState({\n        squares: squares,\n        myTurn: !this.state.myTurn\n      });\n      let message = {\n        roundID: this.state.roundID,\n        board: squares\n      };\n      this.state.socket.emit('update', message);\n      let winner = condition.calculateWinner(squares);\n      let endgame = condition.isGameEnded(squares);\n      let winnerInfo = null;\n\n      if (winner == null) {\n        winnerInfo = 0;\n      } else if (winner == this.state.type) {\n        winnerInfo = 1;\n      } else {\n        winnerInfo = -1;\n      } //check if the game is ended\n\n\n      if (endgame || winner) {\n        this.setState({\n          status: 3\n        });\n        let message = {\n          roundID: this.state.roundID,\n          winner: winnerInfo\n        };\n        this.state.socket.emit('endgame', message);\n      }\n    }\n  } // Setup the `beforeunload` event listener\n\n\n  setupBeforeUnloadListener() {\n    window.addEventListener(\"beforeunload\", ev => {\n      ev.preventDefault();\n      return 'Are you sure you want to leave?';\n    });\n  }\n\n  componentDidMount() {\n    // Activate the event listener\n    this.setupBeforeUnloadListener();\n  }\n\n  render() {\n    let winner = condition.calculateWinner(this.state.squares);\n    let gameOver = condition.isGameEnded(this.state.squares);\n    let status = ui.showGameStatus(this.state.status);\n    let endState = ui.showWinner(winner, this.state.type, gameOver, this.state.status);\n    let turn = ui.showTurn(this.state.status, this.state.myTurn);\n    let symbol = ui.showSymbol(this.state.type);\n    console.log(this.state.status);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 6\n      }\n    }, \"Tic - Tac - Toe\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: this.state.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status column left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, symbol), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 8\n      }\n    }, turn)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"endstate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 8\n      }\n    }, endState))));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/Game.js"],"names":["React","condition","conn","ui","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","args","getArgumenets","data","connect","state","host","gamemaster","Array","fill","myTurn","token","socket","status","type","roundID","setListeners","handleClick","slice","calculateWinner","setState","message","board","emit","winner","endgame","isGameEnded","winnerInfo","setupBeforeUnloadListener","window","addEventListener","ev","preventDefault","componentDidMount","gameOver","showGameStatus","endState","showWinner","turn","showTurn","symbol","showSymbol","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,2BAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,wBAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB,C,CAEA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB,sBACI;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAEA,KAAK,CAACC,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKD,KAAK,CAACE,KAJX,CADJ;AAQH,C,CAED;;;AACA,MAAMC,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAEnCC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,wBACC,oBAAC,MAAD;AACC,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,CAAnB,CADR;AAEC,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAKH;;AAEDE,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKH,YAAL,CAAkB,CAAlB,CADF,EAEE,KAAKA,YAAL,CAAkB,CAAlB,CAFF,EAGE,KAAKA,YAAL,CAAkB,CAAlB,CAHF,CADD,eAMC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKA,YAAL,CAAkB,CAAlB,CADF,EAEE,KAAKA,YAAL,CAAkB,CAAlB,CAFF,EAGE,KAAKA,YAAL,CAAkB,CAAlB,CAHF,CAND,eAWC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKA,YAAL,CAAkB,CAAlB,CADF,EAEE,KAAKA,YAAL,CAAkB,CAAlB,CAFF,EAGE,KAAKA,YAAL,CAAkB,CAAlB,CAHF,CAXD,CADD;AAmBG;;AA9B+B,C,CAkCpC;;;AACA,MAAMI,IAAN,SAAmBd,KAAK,CAACS,SAAzB,CAAmC;AAClCM,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,QAAIW,IAAI,GAAGd,IAAI,CAACe,aAAL,EAAX;AACA,QAAIC,IAAI,GAAGhB,IAAI,CAACiB,OAAL,CAAaH,IAAI,CAAC,MAAD,CAAJ,GAAa,GAAb,GAAiBA,IAAI,CAAC,aAAD,CAAlC,EAAkDA,IAAI,CAAC,OAAD,CAAtD,CAAX;AAEA,SAAKI,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAEL,IAAI,CAAC,MAAD,CADE;AAEZM,MAAAA,UAAU,EAAEN,IAAI,CAAC,YAAD,CAFJ;AAGVJ,MAAAA,OAAO,EAAEW,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAHC;AAIZC,MAAAA,MAAM,EAAE,KAJI;AAKZC,MAAAA,KAAK,EAAEV,IAAI,CAAC,OAAD,CALC;AAMZW,MAAAA,MAAM,EAAET,IAAI,CAAC,QAAD,CANA;AAOZU,MAAAA,MAAM,EAAEV,IAAI,CAAC,QAAD,CAPA;AAQZW,MAAAA,IAAI,EAAE,IARM;AASZC,MAAAA,OAAO,EAAE;AATG,KAAb,CAPe,CAmBf;;AACA5B,IAAAA,IAAI,CAAC6B,YAAL,CAAkB,IAAlB;AACD;;AAGHC,EAAAA,WAAW,CAACrB,CAAD,EAAG;AACX,QAAI,KAAKS,KAAL,CAAWK,MAAX,IAAqB,KAAKL,KAAL,CAAWA,KAAX,KAAqB,CAA9C,EAAiD;AAClD,YAAMR,OAAO,GAAG,KAAKQ,KAAL,CAAWR,OAAX,CAAmBqB,KAAnB,EAAhB,CADkD,CACJ;AAE9C;;AACA,UAAIhC,SAAS,CAACiC,eAAV,CAA0BtB,OAA1B,KAAsCA,OAAO,CAACD,CAAD,CAAjD,EAAqD;AACpD;AACA;;AAEDC,MAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKS,KAAL,CAAWS,IAAxB;AAEA,WAAKM,QAAL,CAAc;AACbvB,QAAAA,OAAO,EAAEA,OADI;AAEba,QAAAA,MAAM,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAFP,OAAd;AAKA,UAAIW,OAAO,GAAG;AACbN,QAAAA,OAAO,EAAG,KAAKV,KAAL,CAAWU,OADR;AAEbO,QAAAA,KAAK,EAAGzB;AAFK,OAAd;AAKA,WAAKQ,KAAL,CAAWO,MAAX,CAAkBW,IAAlB,CAAuB,QAAvB,EAAiCF,OAAjC;AAEA,UAAIG,MAAM,GAAGtC,SAAS,CAACiC,eAAV,CAA0BtB,OAA1B,CAAb;AACA,UAAI4B,OAAO,GAAGvC,SAAS,CAACwC,WAAV,CAAsB7B,OAAtB,CAAd;AACA,UAAI8B,UAAU,GAAG,IAAjB;;AAEA,UAAIH,MAAM,IAAI,IAAd,EAAoB;AACnBG,QAAAA,UAAU,GAAG,CAAb;AACA,OAFD,MAEM,IAAIH,MAAM,IAAI,KAAKnB,KAAL,CAAWS,IAAzB,EAA+B;AACpCa,QAAAA,UAAU,GAAG,CAAb;AACA,OAFK,MAED;AACJA,QAAAA,UAAU,GAAG,CAAC,CAAd;AACA,OAhCiD,CAkClD;;;AACA,UAAGF,OAAO,IAAID,MAAd,EAAqB;AACpB,aAAKJ,QAAL,CAAc;AACbP,UAAAA,MAAM,EAAE;AADK,SAAd;AAIA,YAAIQ,OAAO,GAAG;AACbN,UAAAA,OAAO,EAAG,KAAKV,KAAL,CAAWU,OADR;AAEbS,UAAAA,MAAM,EAAEG;AAFK,SAAd;AAIA,aAAKtB,KAAL,CAAWO,MAAX,CAAkBW,IAAlB,CAAuB,SAAvB,EAAkCF,OAAlC;AACA;AACD;AACD,GAzEiC,CA2ElC;;;AACAO,EAAAA,yBAAyB,GAAG;AACxBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAyCC,EAAD,IAAQ;AAC5CA,MAAAA,EAAE,CAACC,cAAH;AACA,aAAO,iCAAP;AACH,KAHD;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AACb;AACA,SAAKL,yBAAL;AACH;;AAEJ9B,EAAAA,MAAM,GAAG;AACR,QAAI0B,MAAM,GAAGtC,SAAS,CAACiC,eAAV,CAA0B,KAAKd,KAAL,CAAWR,OAArC,CAAb;AACA,QAAIqC,QAAQ,GAAGhD,SAAS,CAACwC,WAAV,CAAsB,KAAKrB,KAAL,CAAWR,OAAjC,CAAf;AACE,QAAIgB,MAAM,GAAGzB,EAAE,CAAC+C,cAAH,CAAkB,KAAK9B,KAAL,CAAWQ,MAA7B,CAAb;AACA,QAAIuB,QAAQ,GAAGhD,EAAE,CAACiD,UAAH,CAAcb,MAAd,EAAsB,KAAKnB,KAAL,CAAWS,IAAjC,EAAuCoB,QAAvC,EAAiD,KAAK7B,KAAL,CAAWQ,MAA5D,CAAf;AACA,QAAIyB,IAAI,GAAGlD,EAAE,CAACmD,QAAH,CAAY,KAAKlC,KAAL,CAAWQ,MAAvB,EAA+B,KAAKR,KAAL,CAAWK,MAA1C,CAAX;AACA,QAAI8B,MAAM,GAAGpD,EAAE,CAACqD,UAAH,CAAc,KAAKpC,KAAL,CAAWS,IAAzB,CAAb;AAEA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtC,KAAL,CAAWQ,MAAvB;AAEC,wBACF;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,CADD,eAKC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AACC,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWR,OADrB;AAEC,MAAA,OAAO,EAAGD,CAAD,IAAO,KAAKqB,WAAL,CAAiBrB,CAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALD,eAYC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM4C,MAAN,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM3B,MAAN,CAFD,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMyB,IAAN,CAHF,CADD,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BF,QAA3B,CADD,CANF,CAZD,CADE;AAyBF;;AA3HgC;;AA8HnC,eAAerC,IAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport * as condition from './utils/gameConditions.js'; \nimport * as conn from './utils/multiplayer.js'; \nimport * as ui from './utils/messages.js'\n\n//SQUARE\nfunction Square(props) {\n\n    return (\n        <button \n          className=\"square\" \n          onClick={props.onClick}\n        >\n            {props.value}\n        </button>\n    );\n}\n\n//BOARD\nclass Board extends React.Component {\n\t\n\trenderSquare(i) {\n    \treturn (\n    \t\t<Square \n    \t\t\tvalue={this.props.squares[i]}\n    \t\t\tonClick={() => this.props.onClick(i)}\n    \t\t/>);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n    \t);\n    }\n}\n\n\n//GAME\nclass Game extends React.Component {\n\tconstructor(props) {\n    \tsuper(props);\n\n    \t//Establish Connection\n    \tlet args = conn.getArgumenets();\n    \tlet data = conn.connect(args['host']+':'+args['playmanster'],args['token'])\n    \t\n    \tthis.state = {\n    \t\thost: args['host'],\n    \t\tgamemaster: args['gamemaster'],\n      \t\tsquares: Array(9).fill(null),\n    \t\tmyTurn: false,\n    \t\ttoken: args['token'],\n    \t\tsocket: data['socket'],\n    \t\tstatus: data['status'],\n    \t\ttype: null,\n    \t\troundID: null,\n    \t};\n\n    \t//set event handlers for server messages\n    \tconn.setListeners(this);\n  \t}\n\n  \t\n\thandleClick(i){\n\t  \tif (this.state.myTurn && this.state.state !== 5) {\n\t\t\tconst squares = this.state.squares.slice();   //create a copy of the array\n\n\t\t\t//if the game is over or the sqare is already filled, return\n\t\t\tif (condition.calculateWinner(squares) || squares[i]){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsquares[i] = this.state.type;\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tsquares: squares,\n\t\t\t\tmyTurn: !this.state.myTurn,\n\t\t\t});\n\n\t\t\tlet message = {\n\t\t\t\troundID : this.state.roundID,\n\t\t\t\tboard : squares\n\t\t\t}\n\n\t\t\tthis.state.socket.emit('update', message)\n\n\t\t\tlet winner = condition.calculateWinner(squares);\n\t\t\tlet endgame = condition.isGameEnded(squares);\n\t\t\tlet winnerInfo = null;\n\n\t\t\tif (winner == null) {\n\t\t\t\twinnerInfo = 0;\n\t\t\t}else if (winner == this.state.type) {\n\t\t\t\twinnerInfo = 1;\n\t\t\t}else{\n\t\t\t\twinnerInfo = -1;\n\t\t\t}\n\n\t\t\t//check if the game is ended\n\t\t\tif(endgame || winner){\n\t\t\t\tthis.setState({\n\t\t\t\t\tstatus: 3,\n\t\t\t\t});\n\n\t\t\t\tlet message = {\n\t\t\t\t\troundID : this.state.roundID,\n\t\t\t\t\twinner: winnerInfo,\n\t\t\t\t}\n\t\t\t\tthis.state.socket.emit('endgame', message)\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Setup the `beforeunload` event listener\n\tsetupBeforeUnloadListener() {\n\t    window.addEventListener(\"beforeunload\", (ev) => {\n\t        ev.preventDefault();\n\t        return 'Are you sure you want to leave?';\n\t    });\n\t}\n\n\tcomponentDidMount() {\n        // Activate the event listener\n        this.setupBeforeUnloadListener();\n    }\n\n\trender() {\n\t\tlet winner = condition.calculateWinner(this.state.squares);\n\t\tlet gameOver = condition.isGameEnded(this.state.squares);\n  \t\tlet status = ui.showGameStatus(this.state.status);\n  \t\tlet endState = ui.showWinner(winner, this.state.type, gameOver, this.state.status);\n  \t\tlet turn = ui.showTurn(this.state.status, this.state.myTurn);\n  \t\tlet symbol = ui.showSymbol(this.state.type)\n\n  \t\tconsole.log(this.state.status)\n\n    \treturn (\n\t\t\t<div className=\"game bg\">\n\t\t\t\t<div className=\"game-title\">\n\t\t\t\t\t<div>Tic - Tac - Toe</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board \n\t\t\t\t\t\tsquares={this.state.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"game-info row\">\n\t\t\t\t\t<div className=\"status column left\">\n\t\t\t\t\t\t<div>{symbol}</div>\n\t\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t \t<div>{turn}</div>\n\t\t\t\t\t </div>\n\t\t\t\t\t <div className=\"column right\">\n\t\t\t\t\t \t<div className=\"endstate\">{endState}</div>\n\t\t\t\t\t </div>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}