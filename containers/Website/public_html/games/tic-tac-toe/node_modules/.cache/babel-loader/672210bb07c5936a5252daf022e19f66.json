{"ast":null,"code":"var _jsxFileName = \"/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/Game.js\";\nimport React from 'react';\nimport './index.css';\nimport openSocket from 'socket.io-client'; // npm i socket.io-client\n//SQUARE\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.value);\n} //BOARD\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n} //GET ARGUMENENTS FROM URL\n\n\nlet getParamValue = function (paramName) {\n  var url = window.location.search.substring(1); //get rid of \"?\" in querystring\n\n  var qArray = url.split('&'); //get key-value pairs\n\n  for (var i = 0; i < qArray.length; i++) {\n    var pArr = qArray[i].split('='); //split key and value\n\n    if (pArr[0] === paramName) console.log(pArr[1]);\n    return pArr[1]; //return value\n  }\n}; //GAME\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props); // var url = window.location.search.substring(1);\n    // var qArray = url.split('&');\n    // let host = qArray[1].split('=');\n\n    this.state = {\n      squares: Array(9).fill(null),\n      myTurn: false,\n      // token: qArray[0].split('='),\n      socket: openSocket('http://localhost:1337'),\n      type: '-'\n    };\n    let self = this;\n    this.state.socket.on('type', type => {\n      let gtype = type == 'first' ? 'X' : 'O';\n      this.setState({\n        id: type,\n        type: gtype,\n        myTurn: gtype == 'X'\n      });\n    });\n    this.state.socket.on('board', board => {\n      this.setState({\n        squares: board,\n        myTurn: true\n      });\n    });\n  }\n\n  handleClick(i) {\n    if (this.state.myTurn) {\n      const squares = this.state.squares.slice(); //create a copy of the array\n      //if the game is over or the sqare is already filled, return\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.type;\n      this.setState({\n        squares: squares,\n        myTurn: !this.state.myTurn\n      });\n      this.state.socket.emit('update', squares);\n      let winStatus = calculateWinner(squares);\n      let isGameOver = checkGameOver(squares);\n\n      if (winStatus || isGameOver) {\n        let message = {\n          isWinner: winStatus == this.state.type,\n          isGameOver: isGameOver\n        };\n        this.state.socket.emit('gameOver', message);\n      }\n    }\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    const gameOver = checkGameOver(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner:' + winner;\n    } else if (gameOver) {\n      status = 'Game ended without winner!';\n    } else {\n      if (this.state.myTurn) {\n        status = 'Your turn!';\n      } else {\n        status = 'Waiting opponent...';\n      }\n    }\n\n    let test1 = this.state.token;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: this.state.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, \"Your symbol: \", this.state.type)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nfunction checkGameOver(squares) {\n  for (var row = 0; row < squares.length; row++) {\n    for (var j = 0; j < row.length; j++) {\n      console.log(quares[row][j]);\n\n      if (squares[row][j] == null) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/panagiotis/Desktop/ds_project/games/tic-tac-toe/src/Game.js"],"names":["React","openSocket","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","getParamValue","paramName","url","window","location","search","substring","qArray","split","length","pArr","console","log","Game","constructor","state","Array","fill","myTurn","socket","type","self","on","gtype","setState","id","board","handleClick","slice","calculateWinner","emit","winStatus","isGameOver","checkGameOver","message","isWinner","winner","gameOver","status","test1","token","lines","a","b","c","row","j","quares"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport openSocket from 'socket.io-client';\n\n// npm i socket.io-client\n\n\n//SQUARE\nfunction Square(props) {\n\n    return (\n        <button \n          className=\"square\" \n          onClick={props.onClick}\n        >\n            {props.value}\n        </button>\n    );\n}\n\n//BOARD\nclass Board extends React.Component {\n\t\n\trenderSquare(i) {\n    \treturn (\n    \t\t<Square \n    \t\t\tvalue={this.props.squares[i]}\n    \t\t\tonClick={() => this.props.onClick(i)}\n    \t\t/>);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n    \t);\n    }\n}\n\n\n//GET ARGUMENENTS FROM URL\nlet getParamValue = function(paramName)\n{\n    var url = window.location.search.substring(1); //get rid of \"?\" in querystring\n    var qArray = url.split('&'); //get key-value pairs\n    for (var i = 0; i < qArray.length; i++) \n    {\n        var pArr = qArray[i].split('='); //split key and value\n        if (pArr[0] === paramName) \n           console.log(pArr[1]);\n            return pArr[1]; //return value\n    }\n}\n\n\n//GAME\nclass Game extends React.Component {\n\tconstructor(props) {\n    \tsuper(props);\n    \t// var url = window.location.search.substring(1);\n    \t// var qArray = url.split('&');\n\n    \t// let host = qArray[1].split('=');\n\n    \tthis.state = {\n      \t\tsquares: Array(9).fill(null),\n    \t\tmyTurn: false,\n    \t\t// token: qArray[0].split('='),\n    \t\tsocket: openSocket('http://localhost:1337'),\n    \t\ttype: '-',\n \n    \t};\n\n    \tlet self = this;\n    \tthis.state.socket.on('type', type => {\n    \t\tlet gtype = type == 'first' ? 'X' : 'O' \n      \t\tthis.setState({\n      \t\t\tid: type,\n      \t\t\ttype: gtype,\n      \t\t\tmyTurn: gtype == 'X',\n      \t\t})\n    \t});\n\n    \tthis.state.socket.on('board', board => {\n\n      \t\tthis.setState({\n      \t\t\tsquares: board,\n      \t\t\tmyTurn: true,\n      \t\t})\n\t      \n    \t});   \n  \t}\n\n\thandleClick(i){\n\t  \tif (this.state.myTurn) {\n\t\t\tconst squares = this.state.squares.slice();   //create a copy of the array\n\n\t\t\t//if the game is over or the sqare is already filled, return\n\t\t\tif (calculateWinner(squares) || squares[i]){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsquares[i] = this.state.type;\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tsquares: squares,\n\t\t\t\tmyTurn: !this.state.myTurn,\n\t\t\t});\n\n\t\t\tthis.state.socket.emit('update', squares)\n\n\t\t\tlet winStatus = calculateWinner(squares);\n\t\t\tlet isGameOver = checkGameOver(squares);\n\n\t\t\tif(winStatus || isGameOver){\n\t\t\t\tlet message = {\n\t\t\t\t\tisWinner: winStatus == this.state.type,\n\t\t\t\t\tisGameOver: isGameOver\n\t\t\t\t}\n\t\t\t\tthis.state.socket.emit('gameOver', message)\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst winner = calculateWinner(this.state.squares);\n\t\tconst gameOver = checkGameOver(this.state.squares);\n\n  \t\tlet status;\n\n\t  \tif (winner) {\n\t  \t\tstatus = 'Winner:' + winner;\n\t  \t}else if (gameOver){\n\t  \t\tstatus = 'Game ended without winner!';\n\t  \t}else{\n\t  \t\tif (this.state.myTurn) {\n\t  \t\t\tstatus = 'Your turn!';\n\t  \t\t}else{\n\t  \t\t\tstatus = 'Waiting opponent...';\n\t  \t\t}\n\t  \t}\n\n\t  \tlet test1 = this.state.token;\n\n    \treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board \n\t\t\t\t\t\tsquares={this.state.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t  <div>{status}</div>\n\t\t\t\t  <div>Your symbol: {this.state.type}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction checkGameOver(squares){\n\tfor (var row = 0; row < squares.length; row++) {\n\t\tfor (var j = 0; j < row.length; j++) {\n\t\t\tconsole.log(quares[row][j])\n\t\t\tif (squares[row][j] == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}